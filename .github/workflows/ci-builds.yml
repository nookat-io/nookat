name: '[CI] Platform Builds'

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to build (optional)'
        required: false
        type: string
      branch:
        description: 'Branch to build (defaults to PR branch)'
        required: false
        type: string
        default: ''

concurrency:
  group: platform-builds-${{ github.event.inputs.pr_number || github.ref }}
  cancel-in-progress: true

jobs:
  platform-builds:
    name: Platform Builds
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            deps: |
              sudo apt-get update
              sudo apt-get install -y \
                libgirepository1.0-dev \
                libglib2.0-dev \
                libgtk-3-dev \
                libgdk-pixbuf2.0-dev \
                libcairo2-dev \
                libpango1.0-dev \
                libatk1.0-dev \
                libwebkit2gtk-4.0-dev \
                libwebkit2gtk-4.1-dev \
                libjavascriptcoregtk-4.1-dev \
                libappindicator3-dev \
                librsvg2-dev \
                patchelf \
                pkg-config \
                libssl-dev
          - os: macos-latest
            platform: macos
            deps: |
              brew install pkg-config openssl
          - os: windows-latest
            platform: windows
            deps: |
              echo "Windows dependencies handled by Tauri"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install system dependencies
      if: matrix.platform == 'linux'
      run: ${{ matrix.deps }}

    - name: Install macOS dependencies
      if: matrix.platform == 'macos'
      run: ${{ matrix.deps }}

    - name: Install dependencies
      run: |
        npm ci
        cd src-tauri
        cargo fetch

    - name: Build frontend
      run: npm run build

    - name: Build Tauri application
      run: |
        cd src-tauri
        cargo build --release

    - name: Run tests
      run: |
        cd src-tauri
        cargo test --release

    - name: Build status
      run: |
        echo "âœ… Platform build successful for ${{ matrix.os }}"
        echo "Build completed at: $(date)"
