name: '[CI] Checks'

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    paths-ignore:
      - 'tickets/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quick-checks:
    name: Quick Checks
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install frontend dependencies
        run: npm ci

      - name: Install rust dependencies
        run: |
          cd src-tauri
          cargo fetch

      - name: Lint frontend
        run: npm run lint

      - name: Type check frontend
        run: npm run type-check

      - name: Rust format check
        run: |
          cd src-tauri
          cargo fmt -- --check

  pre-commit:
    name: Pre-commit Checks
    runs-on: ubuntu-22.04
    needs:
      - quick-checks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Install frontend dependencies
        run: npm ci

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              libwebkit2gtk-4.1-dev \
              libappindicator3-dev \
              librsvg2-dev \
              patchelf

      - name: Install Rust components
        run: |
          rustup component add rustfmt
          rustup component add clippy

      - name: Run pre-commit on all files
        run: pre-commit run --all-files
