name: '[CI] Checks'

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:
  # Frontend checks
  frontend:
    name: Frontend Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npx eslint src --ext .ts,.tsx --max-warnings 0

    - name: Type check
      run: npx tsc --noEmit

    - name: Build frontend
      run: npm run build

  # Rust backend checks
  rust:
    name: Rust Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          src-tauri/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Rust components
      run: |
        rustup component add rustfmt
        rustup component add clippy

    - name: Check Rust formatting
      run: |
        cd src-tauri
        cargo fmt --all -- --check

    - name: Run Clippy
      run: |
        cd src-tauri
        cargo clippy --all-targets --all-features -- -D warnings

    - name: Run Rust tests
      run: |
        cd src-tauri
        cargo test

    - name: Check Rust compilation
      run: |
        cd src-tauri
        cargo check

  # Pre-commit checks
  pre-commit:
    name: Pre-commit Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit

    - name: Install frontend dependencies
      run: npm ci

    - name: Install Rust components
      run: |
        rustup component add rustfmt
        rustup component add clippy

    - name: Run pre-commit on all files
      run: pre-commit run --all-files

  # Build and test the full application
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [frontend, rust]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install dependencies
      run: |
        npm ci
        cd src-tauri
        cargo fetch

    - name: Build frontend
      run: npm run build

    - name: Build Tauri application
      run: |
        cd src-tauri
        cargo build --release
